{"version":3,"sources":["Components/BirthdayCertificate.jsx","Components/Passport.jsx","Components/InternationalPassport.jsx","App.js","reportWebVitals.js","index.js"],"names":["StyledIMaskInput","styled","IMaskInput","BirthdayCertificate","useState","setInput","value","setValue","mask","definitions","L","C","lazy","unmask","inputRef","el","onAccept","placeholder","Passport","InternationalPassport","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA2CMA,EAAmBC,YAAOC,IAAPD,CAAH,6CAIPE,EA3Ca,WAC1B,MAA0BC,mBAAS,IAAnC,mBAAcC,GAAd,WACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACE,qCACE,8KACA,cAACP,EAAD,CACEQ,KAAK,mBACLC,YAAa,CACXC,EAAG,QACHC,EAAG,gCAELC,MAAMN,EACNA,MAAOA,EACPO,QAAQ,EACRC,SAAU,SAACC,GACTV,EAASU,IAIXC,SAKE,SAACV,EAAOE,GAAR,OAAiBD,EAASD,IAK5BW,YAAY,sLAEd,uBA5BF,qDA6BaX,MCCXN,EAAmBC,YAAOC,IAAPD,CAAH,6CAIPiB,EAvCE,WACf,MAA0Bd,mBAAS,IAAnC,mBAAcC,GAAd,WACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACE,gCACE,uHACA,cAAC,EAAD,CACEC,KAAK,cACLI,MAAON,EACPA,MAAOA,EACPO,QAAQ,EACRC,SAAU,SAACC,GACTV,EAASU,IAIXC,SAKE,SAACV,EAAOE,GAAR,OAAiBD,EAASD,IAK5BW,YAAY,+HAEd,uBAxBF,qDAyBaX,MCKXN,EAAmBC,YAAOC,IAAPD,CAAH,6CAIPkB,EAvCe,WAC5B,MAA0Bf,mBAAS,IAAnC,mBAAcC,GAAd,WACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAEA,OACE,gCACE,2JACA,cAAC,EAAD,CACEC,KAAK,aACLI,MAAON,EACPA,MAAOA,EACPO,QAAQ,EACRC,SAAU,SAACC,GACTV,EAASU,IAIXC,SAKE,SAACV,EAAOE,GAAR,OAAiBD,EAASD,IAK5BW,YAAY,mKAEd,uBAxBF,qDAyBaX,MCpBFc,EAVH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.a1e8b9ae.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { IMaskInput } from \"react-imask\";\nimport styled from \"styled-components\";\n\nconst BirthdayCertificate = () => {\n  const [input, setInput] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <>\n      <label> Свидетельство о рождении: </label>\n      <StyledIMaskInput\n        mask=\"L[LLL]-CC 000000\"\n        definitions={{\n          L: /[XVI]/, // Latin Numbers\n          C: /[А-Яа-я]/, // Cyrillic letters\n        }}\n        lazy={value ? false : true}\n        value={value}\n        unmask={true} // true|false|'typed'\n        inputRef={(el) => {\n          setInput(el);\n        }} // access to nested input\n        // DO NOT USE onChange TO HANDLE CHANGES!\n        // USE onAccept INSTEAD\n        onAccept={\n          // depending on prop above first argument is\n          // `value` if `unmask=false`,\n          // `unmaskedValue` if `unmask=true`,\n          // `typedValue` if `unmask='typed'`\n          (value, mask) => setValue(value)\n        }\n        // ...and more mask props in a guide\n\n        // input props also available\n        placeholder=\"Введите свидетельство о рождении\"\n      />\n      <br />\n      Значение: {value}\n    </>\n  );\n};\n\nconst StyledIMaskInput = styled(IMaskInput)`\n  width: 230px;\n`;\n\nexport default BirthdayCertificate;\n","import { useState } from \"react\";\r\nimport { IMaskInput } from \"react-imask\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Passport = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <label> Номер паспорта: </label>\r\n      <StyledIMaskInput\r\n        mask=\"0000 000000\"\r\n        lazy={!value}\r\n        value={value}\r\n        unmask={true} // true|false|'typed'\r\n        inputRef={(el) => {\r\n          setInput(el);\r\n        }} // access to nested input\r\n        // DO NOT USE onChange TO HANDLE CHANGES!\r\n        // USE onAccept INSTEAD\r\n        onAccept={\r\n          // depending on prop above first argument is\r\n          // `value` if `unmask=false`,\r\n          // `unmaskedValue` if `unmask=true`,\r\n          // `typedValue` if `unmask='typed'`\r\n          (value, mask) => setValue(value)\r\n        }\r\n        // ...and more mask props in a guide\r\n\r\n        // input props also available\r\n        placeholder=\"Введите номер паспорта\"\r\n      />\r\n      <br />\r\n      Значение: {value}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledIMaskInput = styled(IMaskInput)`\r\n  width: 230px;\r\n`;\r\n\r\nexport default Passport;\r\n","import { useState } from \"react\";\r\nimport { IMaskInput } from \"react-imask\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InternationalPassport = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <label> Номер загранпаспорта: </label>\r\n      <StyledIMaskInput\r\n        mask=\"00 0000000\"\r\n        lazy={!value}\r\n        value={value}\r\n        unmask={true} // true|false|'typed'\r\n        inputRef={(el) => {\r\n          setInput(el);\r\n        }} // access to nested input\r\n        // DO NOT USE onChange TO HANDLE CHANGES!\r\n        // USE onAccept INSTEAD\r\n        onAccept={\r\n          // depending on prop above first argument is\r\n          // `value` if `unmask=false`,\r\n          // `unmaskedValue` if `unmask=true`,\r\n          // `typedValue` if `unmask='typed'`\r\n          (value, mask) => setValue(value)\r\n        }\r\n        // ...and more mask props in a guide\r\n\r\n        // input props also available\r\n        placeholder=\"Введите номер загранпаспорта\"\r\n      />\r\n      <br />\r\n      Значение: {value}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledIMaskInput = styled(IMaskInput)`\r\n  width: 230px;\r\n`;\r\n\r\nexport default InternationalPassport;\r\n","import BirthdayCertificate from \"./Components/BirthdayCertificate\";\r\nimport Passport from \"./Components/Passport\";\r\nimport InternationalPassport from \"./Components/InternationalPassport\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <BirthdayCertificate />\r\n      <Passport />\r\n      <InternationalPassport />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Input from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Input />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}